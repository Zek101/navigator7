#gather functionalities implemented or not, discussed in the forums that Vaadin users would like to see in a navigation system.


= Namings =

The preferred and most natural word for a class representing a page is "Page".

"Application" should be used in its "Web Application" meaning (one instance per ServletContext). It should not mean "HttpSession" as it do in Vaadin v6.

"Window" is perfect for floating windows and modal dialog boxes. It could also be used for meaning "meta container of a page in a browser tab". It should be named SomethingWindow, not just Window then. It should have a special class or interface more specific than just "Window". For example "AppLevelWindow".


= Annotation and code configuration. =

Annotations should be used to identify the components that are "pages". They should not extend a special component, any Vaadin Component could be a page.
Annotation scanning could automatically detect pages.
Alternatively, annotation scanning could be turned off, and some Java code in the (web) application initialization code could identify the page classes.


= Hidden Pages =

It should be possible to configure some pages, so they don't change the URI.
I would typically error pages. It would be also the pages of a wizard (the URI would not change (optionnal) between the pages of a wizard).

The typical way to access these pages would be a forward. Maybe it's the forward method that should take a "keepPreviousUri" boolean parameter. The page definitions would have nothing special.

